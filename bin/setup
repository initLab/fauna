#!/usr/bin/env ruby
require 'pathname'
require 'yaml'
require 'securerandom'
require 'io/console'
require 'optparse'

def prompt(*args)
  Kernel.print(*args)
  STDIN.gets.chomp
end

APP_ROOT = Pathname.new File.expand_path('../../',  __FILE__)

def in_ci?
  ENV["CI"] || ENV["TRAVIS"]
end

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: setup [options]"

  opts.on('-e', '--e-mail EMAIL', 'E-mail address') do |email|
    options[:email] = email
  end

  opts.on('-u', '--username USERNAME', 'Username') do |username|
    options[:username] = username
  end

  opts.on('-f', '--firstname FIRST_NAME', 'First name') do |first_name|
    options[:first_name] = first_name
  end

  opts.on('-l', '--lastname LAST_NAME', 'Last name') do |last_name|
    options[:last_name] = last_name
  end

  opts.on('-p', '--password PASSWORD', 'Password') do |password|
    options[:password] = password
  end
end.parse!

if in_ci? && [:email, :username, :name, :password].any? { |paramter| !options.keys.include?(paramter) }
  fail 'Please specify email, username, name and password'
end

Dir.chdir APP_ROOT do
  puts '== Installing dependencies =='
  system 'gem install bundler --conservative'
  system 'bundle check > /dev/null || bundle install'

  puts "\n== Generating secret tokens =="
  unless File.exist?('config/secrets.yml')
    secrets = {
      'development' => {'secret_key_base' => SecureRandom.hex(64)},
      'test'        => {'secret_key_base' => SecureRandom.hex(64)},
      'production'  => {'secret_key_base' => '<%= ENV["SECRET_KEY_BASE"] %>'}
    }

    File.open('config/secrets.yml', 'w') do |f|
      f.puts secrets.to_yaml
    end
  end

  puts "\n== Setting up the DB configuration =="
  unless File.exist?('config/database.yml')
    system 'cp config/database.yml.example config/database.yml'
  end

  puts "\n== Preparing database =="
  system 'bundle exec rake db:create db:migrate db:test:prepare'

  puts "\n== Removing old logs and tempfiles =="
  system 'rm -f log/*'
  system 'rm -rf tmp/cache/*'

  puts "\n== Making sure the cache directory exists =="
  system 'mkdir -p tmp/cache'

  puts "\n== Restarting application server =="
  system 'touch tmp/restart.txt'

  # create user if not Travis
  puts "\n== Registering a new user with administrative rights =="

  loop do
    if !in_ci?
      options[:email] = prompt "email: " unless options[:email]
      options[:username] = prompt "username: " unless options[:username]
      unless options[:password]
        print 'password: '
        options[:password] = STDIN.noecho(&:gets)
      end
      unless options[:password_confirmation]
        print "\npassword confirmation: "
        password_confirmation = STDIN.noecho(&:gets)
      end
      options[:first_name] = prompt "\nfirst name: " unless options[:first_name]
      options[:last_name] = prompt "\nlast name: " unless options[:last_name]
    end

    puts "Loading the rails environment."
    require APP_ROOT + 'config/environment'
    puts "Loaded."
    I18n.locale = :en

    user = User.new(email: options[:email],
                    username: options[:username],
                    password: options[:password],
                    password_confirmation: password_confirmation,
                    name: options[:name],
                    locale: I18n.locale)

    unless user.save
      STDERR.puts "\nThe following errors arose during the creation of the user:\n\n"
      user.errors.full_messages.each do |message|
        STDERR.puts message
      end

      STDERR.puts "\nPlease try again.\n"

      if in_ci?
        fail
      else
        options = {}
        next
      end
    end

    user.confirm
    user.add_role :board_member

    puts "Woohoo! User #{user.name} registered!"

    break
  end
end
