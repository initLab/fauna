nav class="navbar navbar-static-top #{content_for?(:nav_color) ? yield(:nav_color) : 'navbar-inverse'}"
  .container
    .navbar-header
      button.navbar-toggle data-target=".navbar-inverse-collapse" data-toggle="collapse" type="button"
        span.icon-bar
        span.icon-bar
        span.icon-bar
      = link_to root_url, class: "navbar-brand #{'active' if current_page?(root_path)}" do
        = image_tag 'logo.svg', class: 'navbar-brand', alt: 'Fauna'
    .navbar-collapse.collapse.navbar-inverse-collapse
      ul.nav.navbar-nav
        - if user_signed_in? and UserPolicy.new(current_user, nil).index?
          li class="#{'active' if current_page?(fauna_users_path)}"
            = link_to fauna_users_path do
              = icon 'users', t('views.navigation.labbers')
      ul.nav.navbar-nav.navbar-right
        - unless user_signed_in?
          li.dropdown
            = link_to '#', class: 'dropdown-toggle', data: {toggle: 'dropdown'} do
              => icon 'flag'
              = {bg: "БГ", en: "EN"}[I18n.locale]
              span.caret<
            ul.dropdown-menu role="menu"
              - I18n.available_locales.each do |locale|
                li.text-center
                  = link_to({bg: "БГ", en: "EN"}[locale], "?locale=#{locale}")
        - if user_signed_in?
          li.dropdown class="#{'active' if current_page?(edit_user_registration_path) || current_page?(user_network_devices_path)}"
            a.dropdown-toggle data-toggle="dropdown" href="#"
              = icon 'user', t('views.navigation.account')
              b.caret<
            ul.dropdown-menu
              li
                = link_to t('views.navigation.view_edit'), edit_user_registration_path
              li
                = link_to t('views.navigation.network_devices'), user_network_devices_path
              li
                = link_to t('views.navigation.oauth_application_management'),  oauth_applications_path
              li
                = link_to t('views.navigation.oauth_token_management'),  oauth_authorized_applications_path
              li.divider
              li
                = link_to t('views.navigation.sign_out'), destroy_user_session_path, method: :delete
        - else
          li class="#{'active' if controller_name == 'sessions'}"
            = link_to new_user_session_path do
              = icon 'sign-in', t('views.navigation.sign_in')
